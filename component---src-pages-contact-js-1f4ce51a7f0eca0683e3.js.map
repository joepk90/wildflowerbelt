{"version":3,"sources":["webpack:///./src/components/content/content.jsx","webpack:///./src/pages/contact.js","webpack:///./src/components/title/title.jsx","webpack:///./src/components/content/content.scss","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es7.object.values.js"],"names":["renderClassList","options","classList","textAlign","contained","Content","content","className","map","data","index","element","Object","keys","values","React","createElement","key","renderContentData","Contact","location","pathname","contactData","seo","marginBottom","md","lg","title","description","renderModifiers","align","Title","children","module","exports","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","it","O","length","i","result","call","push","$export","$values","S"],"mappings":"wKAqBMA,G,UAAkB,SAACC,GAErB,IAAIC,EAAY,UAEhB,OAAKD,GAEqB,WAAtBA,EAAQE,YACRD,GAAwB,iBAGF,IAAtBD,EAAQG,YACRF,GAAwB,uBAGrBA,GAVcA,IA0BVG,IAZC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASL,EAAc,EAAdA,QAGxB,OACI,yBAAKM,UAAWP,EAAgBC,IAC3BK,EAAQE,KAAI,SAACC,EAAMC,GAChB,OAtCU,SAACD,EAAMC,GAE7B,IAAMC,EAAUC,OAAOC,KAAKJ,GACtBH,EAAUM,OAAOE,OAAOL,GAE9B,OAAKE,EAAQ,IAAOL,EAAQ,GAET,mBAAfK,EAAQ,GAAgC,GAGrCI,IAAMC,cAAcL,EAAQ,GAAI,CAAEM,IAAKP,GAASJ,EAAQ,IALxB,GAiCpBY,CAAkBT,EAAMC,S,8KCVhCS,UAxBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,kBAAC,IAAD,KAEI,kBAAC,IAAD,eAAKC,SAAUD,EAASC,UAAcC,EAAYC,MAElD,kBAAC,IAAD,CAAStB,QAAS,CAAEuB,cAAc,IAC9B,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACb,kBAAC,IAAD,KAAQJ,EAAYK,OACpB,kBAAC,IAAD,CAASrB,QAASgB,EAAYM,sB,kCCxB1D,yBAEMC,EAAkB,SAAC5B,GAErB,GAAgB,OAAZA,EAEJ,OAAIA,EAAQ6B,OAA2B,WAAlB7B,EAAQ6B,MAClB,mBADX,GAaWC,IAPD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAA+B,IAArB/B,eAAqB,MAAX,KAAW,EAE5C,OACI,wBAAIM,UAAWsB,EAAgB5B,IAAW+B,K,qBCdlDC,EAAOC,QAAU,CAAC,aAAe,UAAU,iBAAmB,Y,+1BCD9D,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCN,EAAOC,QAAU,SAAUM,GACzB,OAAO,SAAUC,GAOf,IANA,IAKIxB,EALAyB,EAAIL,EAAUI,GACd5B,EAAOuB,EAAQM,GACfC,EAAS9B,EAAK8B,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACd3B,EAAMJ,EAAK+B,KACNT,IAAeG,EAAOQ,KAAKJ,EAAGzB,IACjC4B,EAAOE,KAAKP,EAAY,CAACvB,EAAKyB,EAAEzB,IAAQyB,EAAEzB,IAG9C,OAAO4B,K,qBCjBX,IAAIG,EAAU,EAAQ,QAClBC,EAAU,EAAQ,OAAR,EAA8B,GAE5CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BpC,OAAQ,SAAgB2B,GACtB,OAAOQ,EAAQR","file":"component---src-pages-contact-js-1f4ce51a7f0eca0683e3.js","sourcesContent":["import React from 'react';\n\nimport '~components/content/content.scss';\n\n// TODO setup functionality allow multi-demensional arrays so you can list elements within elements\n// might be worth looking into an npm package to handle this logic?\n\nconst renderContentData = (data, index) => {\n\n    const element = Object.keys(data);\n    const content = Object.values(data);\n\n    if (!element[0] || !content[0]) return '';\n\n    if (element[0] === 'read-more-link') return ''; // TODO setup optional read more link\n\n    // TODO setup check to catch incorrect html elements. Use try catch block?\n    return React.createElement(element[0], { key: index }, content[0]);\n\n}\n\nconst renderClassList = (options) => {\n\n    let classList = \"content\";\n\n    if (!options) return classList;\n\n    if (options.textAlign === \"center\") {\n        classList = classList + \" text-center\";\n    }\n\n    if (options.contained === true) {\n        classList = classList + \" content--contained\";\n    }\n\n    return classList;\n\n}\n\nconst Content = ({ content, options }) => {\n\n\n    return (\n        <div className={renderClassList(options)}>\n            {content.map((data, index) => {\n                return renderContentData(data, index);\n            })}\n        </div>\n    );\n}\n\nexport default Content;","import React from \"react\"\n\nimport Layout from \"~components/layout/layout\";\nimport contactData from \"~content/pages/contact.json\"\nimport Container from \"~components/container/container\";\nimport { GridContainer, Row, Col } from '~components/common/grid/grid';\nimport Title from \"~components/title/title\";\nimport Content from \"~components/content/content\";\nimport Section from \"~components/section/section\";\nimport SEO from \"~components/seo\";\n\nconst Contact = ({ location }) => (\n    <Layout>\n\n        <SEO pathname={location.pathname} {...contactData.seo} />\n\n        <Section options={{ marginBottom: true }}>\n            <Container>\n\n                <GridContainer>\n                    <Row>\n\n                        <Col md={12} lg={9}>\n                            <Title>{contactData.title}</Title>\n                            <Content content={contactData.description} />\n                        </Col>\n\n                    </Row>\n                </GridContainer>\n\n            </Container>\n        </Section>\n    </Layout>\n)\n\nexport default Contact\n","import React from 'react';\n\nconst renderModifiers = (options) => {\n\n    if (options === null) return;\n\n    if (options.align && options.align === 'center') {\n        return 'text-center';\n    }\n\n}\n\nconst Title = ({ children, options = null }) => {\n\n    return (\n        <h1 className={renderModifiers(options)}>{children}</h1>\n    );\n}\n\nexport default Title;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPrimary\":\"#dd9425\",\"secondaryPrimary\":\"#2d5c88\"};","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"sourceRoot":""}